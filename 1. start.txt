# 기존에는 IPython Notebook으로 알려졌던 Jupyter Notebook은 코드, 이미지, 분석 결과, 코멘트, 수식 등을 분석자가 "
# 노트북"처럼 Keep할 수 있게하여 다른 사람들이 분석의 흐름을 읽기 쉽게 만들 수 있는 유연하고 강력한 툴입니다. 
# Jupyter Notebook은 여러가지 언어를 지원합니다. (Python, R, Julia 등) 또한 어떤 컴퓨터에서든지 쉽게 호스팅할 수 있습니다. 
# http나 ssh로 접속하기만 하면 됩니다. 
# 또 무엇보다도 Jupyter Notebook은 무료입니다. 
# IPython 프로젝트에서부터 시작된 Juypter Notebook는 Julia, Python, R의 앞 글자를 따시 지어졌고,
# 파이썬 이외의 여러가지 언어를 지원하기 위하여 시작되었습니다. 
# 주피터에서 파이썬 코드를 실행할 때 내적으로는 IPython Kernel이 돌아가게 됩니다.

# [Help-Keyboard Shortcuts]에서 단축키 가능  ~ [ctrl+shift+P] 로 단축키 확인가능
# 텐서플로우외의 다양한 딥러닝 도구 (comparison of deep learning package)
##  https://www.google.co.kr/search?q=comparison+of+deep+learning+package&source=lnms&tbm=isch&sa=X&ved=0ahUKEwiq8tiE1bDbAhWLErwKHeTQB28Q_AUICigB&biw=729&bih=407&dpr=2.4
# 이중 유명한 것은 페이스북의 Torch기반의 Torchnet, 구글의 Tensorflow, 이들의 조상격인 Theano,버클리에서 만든 Caffe등이 유명
# 파이썬 환경에서 쓰기 쉽게 만들어진 것이 바로 구글의 TensorFlow임.


##  Tensorflow 내장 함수에 대한 설명서 ( https://www.tensorflow.org/api_docs/python/)
# . 텐서플로우 데이터형  Placeholder, Variable,  Constant
# 플레이스 홀더는 템플릿처럼 값을 넣을 공간을 만들어두는 기능, 플레이스폴더를 이용하면 데이터 플로우 그래프를 구축할때는 
# 값을 넣지 않고 값을 담을수 있는 그릇(플레이스 홀더)만 만들어 두고, 이후에 세션을 실행할때 그릇에 값을 넣고 실행할수 있다.





##########텐서플로우의 기본적인 구성을 익힙니다.
# 플레이스홀더와 변수의 개념을 익혀봅니다
# https://github.com/golbin/TensorFlow-Tutorials/blob/master/03%20-%20TensorFlow%20Basic/02%20-%20Variable.py


import tensorflow as tf

## 아래의 두줄을 사용하면 텐서플로우 경고메세지 안나타남
#import os
#os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'


# None 은 크기가 정해지지 않았음을 의미합니다. 
X = tf.placeholder(tf.float32, [None, 3]) 
print(X) 

# tf.placeholder

# X 플레이스홀더에 넣을 값 입니다.
# 플레이스홀더에서 설정한 것 처럼, 두번째 차원의 요소의 갯수는 3개 입니다.
x_data = [[1, 2, 3], [4, 5, 6]]

# tf.Variable: 그래프를 계산하면서 최적화 할 변수들입니다. 이 값이 바로 신경망을 좌우하는 값들입니다.
# tf.random_normal: 각 변수들의 초기값을 정규분포 랜덤 값으로 초기화합니다.
W = tf.Variable(tf.random_normal([3, 2]))
b = tf.Variable(tf.random_normal([2, 1]))

# 입력값과 변수들을 계산할 수식을 작성합니다.
# tf.matmul 처럼 mat* 로 되어 있는 함수로 행렬 계산을 수행합니다.
expr = tf.matmul(X, W) + b

sess = tf.Session()
# 위에서 설정한 Variable 들의 값들을 초기화 하기 위해
# 처음에 tf.global_variables_initializer 를 한 번 실행해야 합니다.

sess.run(tf.global_variables_initializer())

print("=== x_data ===",x_data)
print("=== W ========",sess.run(W))
print("=== b ========",sess.run(b))
print("=== expr =====",sess.run(expr, feed_dict={X: x_data}))


sess.close()



 
